{
    "patterns": [
        {
            "comment": "Lark double-slash style comment",
            "match": "\\s*//[^\\n]*",
            "name": "comment.line.double-slash"
        },
        {
            "comment": "Lark octothorpe style comment",
            "match": "\\s*#[^\\n]*",
            "name": "comment.line.number-sign"
        },
        {
            "comment": "Lark block style comment",
            "match": "\/\\*(.|\\n)*?\\*\\/",
            "name": "comment.block"
        },
        {
            "comment": "Lark double-dash style comment",
            "match": "--[^\\n]*",
            "name": "comment.line.double-dash"
        },
        {
            "comment": "Lark ignore directive",
            "match": "%ignore",
            "name": "keyword.other"
        },
        {
            "comment": "Lark declare directive",
            "match": "%declare",
            "name": "keyword.other"
        },
        {
            "comment": "Lark override directive",
            "match": "%override",
            "name": "keyword.other"
        },
        {
            "comment": "Lark import directive",
            "match": "%import",
            "name": "keyword.control"
        },
        {
            "comment": "Lark extend directive",
            "match": "%extend",
            "name": "keyword.control"
        },
        {
            "comment": "Lark (case-insensitive) string",
            "match": "(\"(([^\"\\\\]|\\\\.)*)\")(i)?",
            "captures": {
                "1": {
                    "name": "string.quoted.double"
                },
                "4": {
                    "name": "storage.modifier"
                }
            }
        },
        {
            "comment": "Lark (case-insentitive) regular expression",
            "match": "(/([^/\\\\]|\\\\.)*/)(i)?",
            "captures": {
                "1": {
                    "name": "string.regexp"
                },
                "3": {
                    "name": "storage.modifier"
                }
            }
        },
        {
            "comment": "Lark rule name",
            "match": "([a-z][_a-z0-9]*)",
            "captures": {
                "1": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark plain rule definition",
            "match": "([a-z][_a-z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark inline rule definition.",
            "match": "(_)([a-z][_a-z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "keyword.other"
                },
                "2": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark conditional inline rule definition.",
            "match": "(?)([a-z][_a-z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "keyword.other"
                },
                "2": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark pinned rule definition.",
            "match": "(!)([a-z][_a-z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "keyword.other"
                },
                "2": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark template name",
            "match": "([a-z][_a-z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "support.variable"
                }
            }
        },
        {
            "comment": "Lark terminal name.",
            "match": "([A-Z][_A-Z0-9]*)",
            "captures": {
                "1": {
                    "name": "support.type"
                }
            }
        },
        {
            "comment": "Lark normal terminal definition (included in tree).",
            "match": "([A-Z][_A-Z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "support.type"
                },
                "2": {
                    "name": "string.regexp"
                }
            }
        },
        {
            "comment": "Lark filtered terminal definition (omitted from tree).",
            "match": "(_[A-Z][_A-Z0-9]*)(.[0-9]*)?(\\s)*:",
            "captures": {
                "1": {
                    "name": "support.type"
                }
            }
        },
        {
            "comment": "Lark optional alias",
            "match": "->",
            "name": "storage.modifier"
        },
        {
            "comment": "Lark  quantifier",
            "match": "[^\\s]*?((\\?|\\+|\\*)(\\?)?)(\\s)?",
            "captures": {
                "1": {
                    "name": "string.regexp"
                }
            }
        },
        {
            "comment": "Lark or operator",
            "match": "\\|",
            "name": "keyword.operator"
        }
    ],
    "scopeName": "source.lark",
    "fileTypes": ["lark"]
}
